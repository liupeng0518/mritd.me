I"s<blockquote>
  <p>Logical Volume Manager 简称 LVM，LVM 是一种可用在Linux内核的逻辑分卷管理器；可用于管理磁盘驱动器或其他类似的大容量存储设备；LVM 依赖于 内核 device mapper 机制，可以实现动态伸缩逻辑卷大小，而屏蔽底层硬件变化，为后期磁盘扩展提供便利</p>
</blockquote>

<h3 id="一lvm-简介">一、LVM 简介</h3>

<p>LVM 技术依据底层内核的 device mapper 机制，聚合底层硬件存储设备存储空间，在上层抽象出可扩展的逻辑分区；LVM 主要术语(磁盘术语)如下</p>

<ul>
  <li><code class="highlighter-rouge">PV</code> : 底层物理存储设备，如 <code class="highlighter-rouge">/dev/sda</code></li>
  <li><code class="highlighter-rouge">VG</code> : 卷组，意将多个 <code class="highlighter-rouge">PV</code> 组合后的抽象存储介质统称</li>
  <li><code class="highlighter-rouge">PE</code> : <code class="highlighter-rouge">VG</code> 将 <code class="highlighter-rouge">PV</code> 聚合后，需向上层提供存储能力，而 <code class="highlighter-rouge">PE</code> 即为 <code class="highlighter-rouge">VG</code> 中最小的存储单位，<strong>一般默认为 4MB</strong></li>
  <li><code class="highlighter-rouge">LV</code> : 在 <code class="highlighter-rouge">VG</code> 之上划分一定量的存储空间，形成逻辑分区，即为 <code class="highlighter-rouge">LV</code></li>
  <li><code class="highlighter-rouge">LE</code> : <code class="highlighter-rouge">LV</code> 从 <code class="highlighter-rouge">VG</code> 之上划分，即 <code class="highlighter-rouge">LV</code> 实质上有 <code class="highlighter-rouge">VG</code> 上最小存储单位 <code class="highlighter-rouge">PE</code> 构成；但是 <code class="highlighter-rouge">PE</code> 构成 <code class="highlighter-rouge">LV</code> 之后，又称作 <code class="highlighter-rouge">LE</code></li>
</ul>

<p><strong>以上各术语(定义)之间关系如下图所示</strong></p>

<p><img src="https://cdn.oss.link/markdown/mbzrv.jpg" alt="PV_VG_LV" /></p>

<h3 id="二lvm-相关命令">二、LVM 相关命令</h3>

<h4 id="21pv-管理工具">2.1、PV 管理工具</h4>

<ul>
  <li>pvs : 简要显示 pv 信息</li>
  <li>pvdisplay : 详细显示 pv 信息</li>
  <li>pvcreate : 创建 pv</li>
  <li>pvmove : 移动 pv (再删除 vg 前必须移动有数据的 pv)</li>
  <li>pvremove : 删除 pv</li>
</ul>

<h4 id="22vg-管理命令">2.2、VG 管理命令</h4>

<ul>
  <li>vgs : 简要显示 vg 信息</li>
  <li>vgdisplay : 详细显示 vg 信息</li>
  <li>vgcreate : 创建 vg</li>
  <li>vgrename : 重命名 vg</li>
  <li>vgremove : 删除 vg</li>
  <li>vgscan : 扫描 vg</li>
  <li>vgextend : 扩展 vg</li>
  <li>vgsplit : 切割 vg (将 vg 中 pv 移动到已存在 vg 中)</li>
  <li>vgreduce : 缩减 vg (删除 vg 内指定 pv)</li>
</ul>

<h4 id="23lv-管理命令">2.3、LV 管理命令</h4>

<ul>
  <li>lvs : 简要显示 lv 信息</li>
  <li>lvdisplay : 详细显示 lv 信息</li>
  <li>lvcreate : 创建逻辑卷</li>
  <li>lvextend : 扩展逻辑卷</li>
  <li>lvreduce : 缩减逻辑分区</li>
  <li>lvremove : 删除逻辑卷</li>
</ul>

<h5 id="231lvcreate">2.3.1、lvcreate</h5>

<p>lvcreate 用于从 vg 上创建 lv 逻辑分区，基本命令格式如下 :</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>lvcreate <span class="nt">-L</span> <span class="c">#[mMgGtT] -n NAME VolumeGroup</span>
</code></pre></div></div>

<p>其常用选项如下 :</p>

<ul>
  <li>
    <table>
      <tbody>
        <tr>
          <td>-L</td>
          <td>–size : 指定要创建的 lv 大小，采用 <code class="highlighter-rouge">+5G</code> 这种方式</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>-l</td>
          <td>–extents : 指定大小范围，类似于 fdisk 分区时选择盘区范围</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>-s</td>
          <td>–snapshot : 创建一个快照卷，创建快照卷时后面必须跟快照卷名称</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>p : 权限(r、rw)</li>
</ul>

<h5 id="232lvextend">2.3.2、lvextend</h5>

<p>lvextend 支持在线扩展扩展逻辑分区大小，命令格式如下 :</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>lvextend <span class="nt">-L</span> <span class="o">[</span>+]#[mMgGtT] /dev/VG_NAME/LV_NAME
</code></pre></div></div>

<p><strong>注意 -L 选项后 + 可以省略，但是省略后代表总容量，如当前 LV 2G，需扩展 3G，则不写 + 需要输入 5G</strong></p>

<p><strong>lv 扩展后并不能立即体现在 df 等命令上，因为虽然逻辑卷已经扩展，但是文件系统尚未扩展，对于 ext 系列的文件系统可采用 <code class="highlighter-rouge">resize2fs /dev/VG_NAME/LV_NAME</code> 的方式刷新文件系统，其他分区格式需采用其他工具</strong></p>

<h5 id="233lvreduce">2.3.3、lvreduce</h5>

<p><strong>在缩减 lv 时，必须先卸载文件系统，然后缩减文件系统，并且缩减文件系统后要强制做文件系统检测，以防止发生损坏，操作命令及顺序如下 :</strong></p>

<ul>
  <li>umount /dev/VG_NAME/LV_NAME</li>
  <li>e2fsck -f /dev/VG_NAME/LV_NAME</li>
  <li>resize2fs /dev/VG_NAME/LV_NAME #[mMgGtT]</li>
  <li>lvreduce [-]#[mMgGtT] /dev/VG_NAME/LV_NAME</li>
  <li>mount /dev/VG_NAME/LV_NAME DIR</li>
</ul>

<p>转载请注明出处，本文采用 <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">CC4.0</a> 协议授权</p>
:ET