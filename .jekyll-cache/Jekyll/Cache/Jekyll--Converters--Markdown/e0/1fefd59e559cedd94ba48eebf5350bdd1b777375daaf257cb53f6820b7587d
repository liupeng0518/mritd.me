I"lI<blockquote>
  <p>准备开发点东西，需要用到 Etcd，由于生产 Etcd 全部开启了 TLS 加密，所以客户端需要相应修改，以下为 Golang 链接 Etcd 并且使用客户端证书验证的样例代码</p>
</blockquote>

<h2 id="api-v2">API V2</h2>

<div class="language-golang highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="k">import</span> <span class="p">(</span>
	<span class="s">"context"</span>
	<span class="s">"crypto/tls"</span>
	<span class="s">"crypto/x509"</span>
	<span class="s">"io/ioutil"</span>
	<span class="s">"log"</span>
	<span class="s">"net"</span>
	<span class="s">"net/http"</span>
	<span class="s">"time"</span>

	<span class="s">"go.etcd.io/etcd/client"</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>

	<span class="c">// 为了保证 HTTPS 链接可信，需要预先加载目标证书签发机构的 CA 根证书</span>
	<span class="n">etcdCA</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">ioutil</span><span class="o">.</span><span class="n">ReadFile</span><span class="p">(</span><span class="s">"/Users/mritd/tmp/etcd_ssl/etcd-root-ca.pem"</span><span class="p">)</span>
	<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Fatal</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="c">// etcd 启用了双向 TLS 认证，所以客户端证书同样需要加载</span>
	<span class="n">etcdClientCert</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">tls</span><span class="o">.</span><span class="n">LoadX509KeyPair</span><span class="p">(</span><span class="s">"/Users/mritd/tmp/etcd_ssl/etcd.pem"</span><span class="p">,</span> <span class="s">"/Users/mritd/tmp/etcd_ssl/etcd-key.pem"</span><span class="p">)</span>
	<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Fatal</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="c">// 创建一个空的 CA Pool</span>
	<span class="c">// 因为后续只会链接 Etcd 的 api 端点，所以此处选择使用空的 CA Pool，然后只加入 Etcd CA 既可</span>
	<span class="c">// 如果期望链接其他 TLS 端点，那么最好使用 x509.SystemCertPool() 方法先 copy 一份系统根 CA</span>
	<span class="c">// 然后再向这个 Pool 中添加自定义 CA</span>
	<span class="n">rootCertPool</span> <span class="o">:=</span> <span class="n">x509</span><span class="o">.</span><span class="n">NewCertPool</span><span class="p">()</span>
	<span class="n">rootCertPool</span><span class="o">.</span><span class="n">AppendCertsFromPEM</span><span class="p">(</span><span class="n">etcdCA</span><span class="p">)</span>

	<span class="n">cfg</span> <span class="o">:=</span> <span class="n">client</span><span class="o">.</span><span class="n">Config</span><span class="p">{</span>
		<span class="c">// Etcd HTTPS api 端点</span>
		<span class="n">Endpoints</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"https://172.16.14.114:2379"</span><span class="p">},</span>
		<span class="c">// 自定义 Transport 实现自签 CA 加载以及 Client Cert 加载</span>
		<span class="c">// 其他参数最好从 client.DefaultTranspor copy，以保证与默认 client 相同的行为</span>
		<span class="n">Transport</span><span class="o">:</span> <span class="o">&amp;</span><span class="n">http</span><span class="o">.</span><span class="n">Transport</span><span class="p">{</span>
			<span class="n">Proxy</span><span class="o">:</span> <span class="n">http</span><span class="o">.</span><span class="n">ProxyFromEnvironment</span><span class="p">,</span>
			<span class="c">// Dial 方法已被启用，采用新的 DialContext 设置超时</span>
			<span class="n">DialContext</span><span class="o">:</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">net</span><span class="o">.</span><span class="n">Dialer</span><span class="p">{</span>
				<span class="n">KeepAlive</span><span class="o">:</span> <span class="m">30</span> <span class="o">*</span> <span class="n">time</span><span class="o">.</span><span class="n">Second</span><span class="p">,</span>
				<span class="n">Timeout</span><span class="o">:</span>   <span class="m">30</span> <span class="o">*</span> <span class="n">time</span><span class="o">.</span><span class="n">Second</span><span class="p">,</span>
			<span class="p">})</span><span class="o">.</span><span class="n">DialContext</span><span class="p">,</span>
			<span class="c">// 自定义 CA 及 Client Cert 配置</span>
			<span class="n">TLSClientConfig</span><span class="o">:</span> <span class="o">&amp;</span><span class="n">tls</span><span class="o">.</span><span class="n">Config</span><span class="p">{</span>
				<span class="n">RootCAs</span><span class="o">:</span>      <span class="n">rootCertPool</span><span class="p">,</span>
				<span class="n">Certificates</span><span class="o">:</span> <span class="p">[]</span><span class="n">tls</span><span class="o">.</span><span class="n">Certificate</span><span class="p">{</span><span class="n">etcdClientCert</span><span class="p">},</span>
			<span class="p">},</span>
			<span class="n">TLSHandshakeTimeout</span><span class="o">:</span> <span class="m">10</span> <span class="o">*</span> <span class="n">time</span><span class="o">.</span><span class="n">Second</span><span class="p">,</span>
		<span class="p">},</span>
		<span class="c">// set timeout per request to fail fast when the target endpoint is unavailable</span>
		<span class="n">HeaderTimeoutPerRequest</span><span class="o">:</span> <span class="n">time</span><span class="o">.</span><span class="n">Second</span><span class="p">,</span>
	<span class="p">}</span>
	<span class="n">c</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">client</span><span class="o">.</span><span class="n">New</span><span class="p">(</span><span class="n">cfg</span><span class="p">)</span>
	<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Fatal</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="n">kapi</span> <span class="o">:=</span> <span class="n">client</span><span class="o">.</span><span class="n">NewKeysAPI</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
	<span class="c">// set "/foo" key with "bar" value</span>
	<span class="n">log</span><span class="o">.</span><span class="n">Print</span><span class="p">(</span><span class="s">"Setting '/foo' key with 'bar' value"</span><span class="p">)</span>
	<span class="n">resp</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">kapi</span><span class="o">.</span><span class="n">Set</span><span class="p">(</span><span class="n">context</span><span class="o">.</span><span class="n">Background</span><span class="p">(),</span> <span class="s">"/foo"</span><span class="p">,</span> <span class="s">"bar"</span><span class="p">,</span> <span class="no">nil</span><span class="p">)</span>
	<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Fatal</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
		<span class="c">// print common key info</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"Set is done. Metadata is %q</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">resp</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="c">// get "/foo" key's value</span>
	<span class="n">log</span><span class="o">.</span><span class="n">Print</span><span class="p">(</span><span class="s">"Getting '/foo' key value"</span><span class="p">)</span>
	<span class="n">resp</span><span class="p">,</span> <span class="n">err</span> <span class="o">=</span> <span class="n">kapi</span><span class="o">.</span><span class="n">Get</span><span class="p">(</span><span class="n">context</span><span class="o">.</span><span class="n">Background</span><span class="p">(),</span> <span class="s">"/foo"</span><span class="p">,</span> <span class="no">nil</span><span class="p">)</span>
	<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Fatal</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
		<span class="c">// print common key info</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"Get is done. Metadata is %q</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">resp</span><span class="p">)</span>
		<span class="c">// print value</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"%q key has %q value</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">resp</span><span class="o">.</span><span class="n">Node</span><span class="o">.</span><span class="n">Key</span><span class="p">,</span> <span class="n">resp</span><span class="o">.</span><span class="n">Node</span><span class="o">.</span><span class="n">Value</span><span class="p">)</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="api-v3">API V3</h2>

<div class="language-golang highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="k">import</span> <span class="p">(</span>
	<span class="s">"context"</span>
	<span class="s">"crypto/tls"</span>
	<span class="s">"crypto/x509"</span>
	<span class="s">"io/ioutil"</span>
	<span class="s">"log"</span>
	<span class="s">"time"</span>

	<span class="s">"go.etcd.io/etcd/clientv3"</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>

	<span class="c">// 为了保证 HTTPS 链接可信，需要预先加载目标证书签发机构的 CA 根证书</span>
	<span class="n">etcdCA</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">ioutil</span><span class="o">.</span><span class="n">ReadFile</span><span class="p">(</span><span class="s">"/Users/mritd/tmp/etcd_ssl/etcd-root-ca.pem"</span><span class="p">)</span>
	<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Fatal</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="c">// etcd 启用了双向 TLS 认证，所以客户端证书同样需要加载</span>
	<span class="n">etcdClientCert</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">tls</span><span class="o">.</span><span class="n">LoadX509KeyPair</span><span class="p">(</span><span class="s">"/Users/mritd/tmp/etcd_ssl/etcd.pem"</span><span class="p">,</span> <span class="s">"/Users/mritd/tmp/etcd_ssl/etcd-key.pem"</span><span class="p">)</span>
	<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Fatal</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
	<span class="p">}</span>

	<span class="c">// 创建一个空的 CA Pool</span>
	<span class="c">// 因为后续只会链接 Etcd 的 api 端点，所以此处选择使用空的 CA Pool，然后只加入 Etcd CA 既可</span>
	<span class="c">// 如果期望链接其他 TLS 端点，那么最好使用 x509.SystemCertPool() 方法先 copy 一份系统根 CA</span>
	<span class="c">// 然后再向这个 Pool 中添加自定义 CA</span>
	<span class="n">rootCertPool</span> <span class="o">:=</span> <span class="n">x509</span><span class="o">.</span><span class="n">NewCertPool</span><span class="p">()</span>
	<span class="n">rootCertPool</span><span class="o">.</span><span class="n">AppendCertsFromPEM</span><span class="p">(</span><span class="n">etcdCA</span><span class="p">)</span>

	<span class="c">// 创建 api v3 的 client</span>
	<span class="n">cli</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">clientv3</span><span class="o">.</span><span class="n">New</span><span class="p">(</span><span class="n">clientv3</span><span class="o">.</span><span class="n">Config</span><span class="p">{</span>
		<span class="c">// etcd https api 端点</span>
		<span class="n">Endpoints</span><span class="o">:</span>   <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"https://172.16.14.114:2379"</span><span class="p">},</span>
		<span class="n">DialTimeout</span><span class="o">:</span> <span class="m">5</span> <span class="o">*</span> <span class="n">time</span><span class="o">.</span><span class="n">Second</span><span class="p">,</span>
		<span class="c">// 自定义 CA 及 Client Cert 配置</span>
		<span class="n">TLS</span><span class="o">:</span> <span class="o">&amp;</span><span class="n">tls</span><span class="o">.</span><span class="n">Config</span><span class="p">{</span>
			<span class="n">RootCAs</span><span class="o">:</span>      <span class="n">rootCertPool</span><span class="p">,</span>
			<span class="n">Certificates</span><span class="o">:</span> <span class="p">[]</span><span class="n">tls</span><span class="o">.</span><span class="n">Certificate</span><span class="p">{</span><span class="n">etcdClientCert</span><span class="p">},</span>
		<span class="p">},</span>
	<span class="p">})</span>
	<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Fatal</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="k">defer</span> <span class="k">func</span><span class="p">()</span> <span class="p">{</span> <span class="n">_</span> <span class="o">=</span> <span class="n">cli</span><span class="o">.</span><span class="n">Close</span><span class="p">()</span> <span class="p">}()</span>

	<span class="n">ctx</span><span class="p">,</span> <span class="n">cancel</span> <span class="o">:=</span> <span class="n">context</span><span class="o">.</span><span class="n">WithTimeout</span><span class="p">(</span><span class="n">context</span><span class="o">.</span><span class="n">Background</span><span class="p">(),</span> <span class="m">3</span><span class="o">*</span><span class="n">time</span><span class="o">.</span><span class="n">Second</span><span class="p">)</span>
	<span class="n">putResp</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">cli</span><span class="o">.</span><span class="n">Put</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="s">"sample_key"</span><span class="p">,</span> <span class="s">"sample_value"</span><span class="p">)</span>
	<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Fatal</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="n">putResp</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="n">cancel</span><span class="p">()</span>

	<span class="n">ctx</span><span class="p">,</span> <span class="n">cancel</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">WithTimeout</span><span class="p">(</span><span class="n">context</span><span class="o">.</span><span class="n">Background</span><span class="p">(),</span> <span class="m">3</span><span class="o">*</span><span class="n">time</span><span class="o">.</span><span class="n">Second</span><span class="p">)</span>
	<span class="n">delResp</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">cli</span><span class="o">.</span><span class="n">Delete</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="s">"sample_key"</span><span class="p">)</span>
	<span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Fatal</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
		<span class="n">log</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="n">delResp</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="n">cancel</span><span class="p">()</span>
<span class="p">}</span>
</code></pre></div></div>

<p>转载请注明出处，本文采用 <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">CC4.0</a> 协议授权</p>
:ET