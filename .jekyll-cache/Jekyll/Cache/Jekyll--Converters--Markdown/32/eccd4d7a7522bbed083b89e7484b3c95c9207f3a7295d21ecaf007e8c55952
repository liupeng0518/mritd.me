I"T<blockquote>
  <p>迫于 Github 上 Star 的项目有点多，今天整理一下一些有意思的 Go 编写的小工具；大多数为终端下的实用工具，装逼的比如天气预报啥的就不写了</p>
</blockquote>

<h3 id="syncthing">syncthing</h3>

<p>强大的文件同步工具，构建私人同步盘 👉 <a href="https://github.com/syncthing、syncthing">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/er3tj.jpg" alt="syncthing" /></p>

<h3 id="fzf">fzf</h3>

<p>一个强大的终端文件浏览器 👉 <a href="https://github.com/junegunn/fzf">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/ihhqy.jpg" alt="fzf" /></p>

<h3 id="hey">hey</h3>

<p>http 负载测试工具，简单好用 👉 <a href="https://github.com/rakyll/hey">Github</a></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Usage: hey <span class="o">[</span>options...] &lt;url&gt;

Options:
  <span class="nt">-n</span>  Number of requests to run. Default is 200.
  <span class="nt">-c</span>  Number of requests to run concurrently. Total number of requests cannot
      be smaller than the concurrency level. Default is 50.
  <span class="nt">-q</span>  Rate limit, <span class="k">in </span>queries per second <span class="o">(</span>QPS<span class="o">)</span><span class="nb">.</span> Default is no rate limit.
  <span class="nt">-z</span>  Duration of application to send requests. When duration is reached,
      application stops and exits. If duration is specified, n is ignored.
      Examples: <span class="nt">-z</span> 10s <span class="nt">-z</span> 3m.
  <span class="nt">-o</span>  Output type. If none provided, a summary is printed.
      <span class="s2">"csv"</span> is the only supported alternative. Dumps the response
      metrics <span class="k">in </span>comma-separated values format.

  <span class="nt">-m</span>  HTTP method, one of GET, POST, PUT, DELETE, HEAD, OPTIONS.
  <span class="nt">-H</span>  Custom HTTP header. You can specify as many as needed by repeating the flag.
      For example, <span class="nt">-H</span> <span class="s2">"Accept: text/html"</span> <span class="nt">-H</span> <span class="s2">"Content-Type: application/xml"</span> <span class="nb">.</span>
  <span class="nt">-t</span>  Timeout <span class="k">for </span>each request <span class="k">in </span>seconds. Default is 20, use 0 <span class="k">for </span>infinite.
  <span class="nt">-A</span>  HTTP Accept header.
  <span class="nt">-d</span>  HTTP request body.
  <span class="nt">-D</span>  HTTP request body from file. For example, /home/user/file.txt or ./file.txt.
  <span class="nt">-T</span>  Content-type, defaults to <span class="s2">"text/html"</span><span class="nb">.</span>
  <span class="nt">-a</span>  Basic authentication, username:password.
  <span class="nt">-x</span>  HTTP Proxy address as host:port.
  <span class="nt">-h2</span> Enable HTTP/2.

  <span class="nt">-host</span>    HTTP Host header.

  <span class="nt">-disable-compression</span>  Disable compression.
  <span class="nt">-disable-keepalive</span>    Disable keep-alive, prevents re-use of TCP
                        connections between different HTTP requests.
  <span class="nt">-disable-redirects</span>    Disable following of HTTP redirects
  <span class="nt">-cpus</span>                 Number of used cpu cores.
                        <span class="o">(</span>default <span class="k">for </span>current machine is 8 cores<span class="o">)</span>
</code></pre></div></div>

<h3 id="vegeta">vegeta</h3>

<p>http 负载测试工具，功能强大 👉 <a href="https://github.com/tsenart/vegeta">Github</a></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Usage: vegeta <span class="o">[</span>global flags] &lt;<span class="nb">command</span><span class="o">&gt;</span> <span class="o">[</span><span class="nb">command </span>flags]

global flags:
  <span class="nt">-cpus</span> int
        Number of CPUs to use <span class="o">(</span>default 8<span class="o">)</span>
  <span class="nt">-profile</span> string
        Enable profiling of <span class="o">[</span>cpu, heap]
  <span class="nt">-version</span>
        Print version and <span class="nb">exit

</span>attack <span class="nb">command</span>:
  <span class="nt">-body</span> string
        Requests body file
  <span class="nt">-cert</span> string
        TLS client PEM encoded certificate file
  <span class="nt">-connections</span> int
        Max open idle connections per target host <span class="o">(</span>default 10000<span class="o">)</span>
  <span class="nt">-duration</span> duration
        Duration of the <span class="nb">test</span> <span class="o">[</span>0 <span class="o">=</span> forever]
  <span class="nt">-format</span> string
        Targets format <span class="o">[</span>http, json] <span class="o">(</span>default <span class="s2">"http"</span><span class="o">)</span>
  <span class="nt">-h2c</span>
        Send HTTP/2 requests without TLS encryption
  <span class="nt">-header</span> value
        Request header
  <span class="nt">-http2</span>
        Send HTTP/2 requests when supported by the server <span class="o">(</span>default <span class="nb">true</span><span class="o">)</span>
  <span class="nt">-insecure</span>
        Ignore invalid server TLS certificates
  <span class="nt">-keepalive</span>
        Use persistent connections <span class="o">(</span>default <span class="nb">true</span><span class="o">)</span>
  <span class="nt">-key</span> string
        TLS client PEM encoded private key file
  <span class="nt">-laddr</span> value
        Local IP address <span class="o">(</span>default 0.0.0.0<span class="o">)</span>
  <span class="nt">-lazy</span>
        Read targets lazily
  <span class="nt">-max-body</span> value
        Maximum number of bytes to capture from response bodies. <span class="o">[</span><span class="nt">-1</span> <span class="o">=</span> no limit] <span class="o">(</span>default <span class="nt">-1</span><span class="o">)</span>
  <span class="nt">-name</span> string
        Attack name
  <span class="nt">-output</span> string
        Output file <span class="o">(</span>default <span class="s2">"stdout"</span><span class="o">)</span>
  <span class="nt">-rate</span> value
        Number of requests per <span class="nb">time </span>unit <span class="o">(</span>default 50/1s<span class="o">)</span>
  <span class="nt">-redirects</span> int
        Number of redirects to follow. <span class="nt">-1</span> will not follow but marks as success <span class="o">(</span>default 10<span class="o">)</span>
  <span class="nt">-resolvers</span> value
        List of addresses <span class="o">(</span>ip:port<span class="o">)</span> to use <span class="k">for </span>DNS resolution. Disables use of <span class="nb">local </span>system DNS. <span class="o">(</span>comma separated list<span class="o">)</span>
  <span class="nt">-root-certs</span> value
        TLS root certificate files <span class="o">(</span>comma separated list<span class="o">)</span>
  <span class="nt">-targets</span> string
        Targets file <span class="o">(</span>default <span class="s2">"stdin"</span><span class="o">)</span>
  <span class="nt">-timeout</span> duration
        Requests <span class="nb">timeout</span> <span class="o">(</span>default 30s<span class="o">)</span>
  <span class="nt">-workers</span> uint
        Initial number of workers <span class="o">(</span>default 10<span class="o">)</span>

encode <span class="nb">command</span>:
  <span class="nt">-output</span> string
        Output file <span class="o">(</span>default <span class="s2">"stdout"</span><span class="o">)</span>
  <span class="nt">-to</span> string
        Output encoding <span class="o">[</span>csv, gob, json] <span class="o">(</span>default <span class="s2">"json"</span><span class="o">)</span>

plot <span class="nb">command</span>:
  <span class="nt">-output</span> string
        Output file <span class="o">(</span>default <span class="s2">"stdout"</span><span class="o">)</span>
  <span class="nt">-threshold</span> int
        Threshold of data points above which series are downsampled. <span class="o">(</span>default 4000<span class="o">)</span>
  <span class="nt">-title</span> string
        Title and header of the resulting HTML page <span class="o">(</span>default <span class="s2">"Vegeta Plot"</span><span class="o">)</span>

report <span class="nb">command</span>:
  <span class="nt">-every</span> duration
        Report interval
  <span class="nt">-output</span> string
        Output file <span class="o">(</span>default <span class="s2">"stdout"</span><span class="o">)</span>
  <span class="nt">-type</span> string
        Report <span class="nb">type </span>to generate <span class="o">[</span>text, json, hist[buckets]] <span class="o">(</span>default <span class="s2">"text"</span><span class="o">)</span>

examples:
  <span class="nb">echo</span> <span class="s2">"GET http://localhost/"</span> | vegeta attack <span class="nt">-duration</span><span class="o">=</span>5s | <span class="nb">tee </span>results.bin | vegeta report
  vegeta report <span class="nt">-type</span><span class="o">=</span>json results.bin <span class="o">&gt;</span> metrics.json
  <span class="nb">cat </span>results.bin | vegeta plot <span class="o">&gt;</span> plot.html
  <span class="nb">cat </span>results.bin | vegeta report <span class="nt">-type</span><span class="o">=</span><span class="s2">"hist[0,100ms,200ms,300ms]"</span>
</code></pre></div></div>

<h3 id="dive">dive</h3>

<p>功能强大的 Docker 镜像分析工具，可以查看每层镜像的具体差异等 👉 <a href="https://github.com/wagoodman/dive">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/ik3ng.gif" alt="dive" /></p>

<h3 id="ctop">ctop</h3>

<p>容器运行时资源分析，如 CPU、内存消耗等 👉 <a href="https://github.com/bcicen/ctop">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/mr3x3.gif" alt="ctop" /></p>

<h3 id="container-diff">container-diff</h3>

<p>Google 推出的工具，功能就顾名思义了 👉 <a href="https://github.com/GoogleContainerTools/container-diff">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/dtapx.png" alt="container-diff" /></p>

<h3 id="transfersh">transfer.sh</h3>

<p>快捷的终端文件分享工具 👉 <a href="https://github.com/dutchcoders/transfer.sh">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/76vh0.png" alt="transfer.sh" /></p>

<h3 id="vuls">vuls</h3>

<p>Linux/FreeBSD 漏洞扫描工具 👉 <a href="https://github.com/future-architect/vuls">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/bpsps.jpg" alt="vuls" /></p>

<h3 id="restic">restic</h3>

<p>高性能安全的文件备份工具 👉 <a href="https://github.com/restic/restic">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/g51z4.png" alt="restic" /></p>

<h3 id="gitql">gitql</h3>

<p>使用 sql 的方式查询 git 提交 👉 <a href="https://github.com/cloudson/gitql">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/4h095.gif" alt="gitql" /></p>

<h3 id="gitflow-toolkit">gitflow-toolkit</h3>

<p>帮助生成满足 Gitflow 格式 commit message 的小工具(自己写的) 👉 <a href="https://github.com/mritd/gitflow-toolkit">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/1e2v1.gif" alt="gitflow-toolkit" /></p>

<h3 id="git-chglog">git-chglog</h3>

<p>对主流的 Gitflow 格式的 commit message 生成 CHANGELOG 👉 <a href="https://github.com/git-chglog/git-chglog">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/zphxd.gif" alt="git-chglog" /></p>

<h3 id="grv">grv</h3>

<p>一个 git 终端图形化浏览工具 👉 <a href="https://github.com/rgburke/grv">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/k1vh2.jpg" alt="grv" /></p>

<h3 id="jid">jid</h3>

<p>命令行 json 格式化处理工具，类似 jq，不过感觉更加强大 👉 <a href="https://github.com/simeji/jid">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/3k4ue.gif" alt="jid" /></p>

<h3 id="annie">annie</h3>

<p>类似 youget 的一个视频下载工具，可以解析大部分视频网站直接下载 👉 <a href="https://github.com/iawia002/annie">Github</a></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>annie <span class="nt">-i</span> https://www.youtube.com/watch?v<span class="o">=</span>dQw4w9WgXcQ

 Site:      YouTube youtube.com
 Title:     Rick Astley - Never Gonna Give You Up <span class="o">(</span>Video<span class="o">)</span>
 Type:      video
 Streams:   <span class="c"># All available quality</span>
     <span class="o">[</span>248]  <span class="nt">-------------------</span>
     Quality:         1080p video/webm<span class="p">;</span> <span class="nv">codecs</span><span class="o">=</span><span class="s2">"vp9"</span>
     Size:            49.29 MiB <span class="o">(</span>51687554 Bytes<span class="o">)</span>
     <span class="c"># download with: annie -f 248 ...</span>

     <span class="o">[</span>137]  <span class="nt">-------------------</span>
     Quality:         1080p video/mp4<span class="p">;</span> <span class="nv">codecs</span><span class="o">=</span><span class="s2">"avc1.640028"</span>
     Size:            43.45 MiB <span class="o">(</span>45564306 Bytes<span class="o">)</span>
     <span class="c"># download with: annie -f 137 ...</span>

     <span class="o">[</span>398]  <span class="nt">-------------------</span>
     Quality:         720p video/mp4<span class="p">;</span> <span class="nv">codecs</span><span class="o">=</span><span class="s2">"av01.0.05M.08"</span>
     Size:            37.12 MiB <span class="o">(</span>38926432 Bytes<span class="o">)</span>
     <span class="c"># download with: annie -f 398 ...</span>

     <span class="o">[</span>136]  <span class="nt">-------------------</span>
     Quality:         720p video/mp4<span class="p">;</span> <span class="nv">codecs</span><span class="o">=</span><span class="s2">"avc1.4d401f"</span>
     Size:            31.34 MiB <span class="o">(</span>32867324 Bytes<span class="o">)</span>
     <span class="c"># download with: annie -f 136 ...</span>

     <span class="o">[</span>247]  <span class="nt">-------------------</span>
     Quality:         720p video/webm<span class="p">;</span> <span class="nv">codecs</span><span class="o">=</span><span class="s2">"vp9"</span>
     Size:            31.03 MiB <span class="o">(</span>32536181 Bytes<span class="o">)</span>
     <span class="c"># download with: annie -f 247 ...</span>
</code></pre></div></div>

<h3 id="up">up</h3>

<p>Linux 下管道式终端搜索工具 👉 <a href="https://github.com/akavel/up">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/n8zdj.gif" alt="up" /></p>

<h3 id="lego">lego</h3>

<p>Let’s Encrypt 证书申请工具 👉 <a href="https://github.com/xenolf/lego">Github</a></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>NAME:
   lego - Let<span class="s1">'s Encrypt client written in Go

USAGE:
   lego [global options] command [command options] [arguments...]

COMMANDS:
     run      Register an account, then create and install a certificate
     revoke   Revoke a certificate
     renew    Renew a certificate
     dnshelp  Shows additional help for the --dns global option
     help, h  Shows a list of commands or help for one command

GLOBAL OPTIONS:
   --domains value, -d value   Add a domain to the process. Can be specified multiple times.
   --csr value, -c value       Certificate signing request filename, if an external CSR is to be used
   --server value, -s value    CA hostname (and optionally :port). The server certificate must be trusted in order to avoid further modifications to the client. (default: "https://acme-v02.api.letsencrypt.org/directory")
   --email value, -m value     Email used for registration and recovery contact.
   --filename value            Filename of the generated certificate
   --accept-tos, -a            By setting this flag to true you indicate that you accept the current Let'</span>s Encrypt terms of service.
   <span class="nt">--eab</span>                       Use External Account Binding <span class="k">for </span>account registration. Requires <span class="nt">--kid</span> and <span class="nt">--hmac</span><span class="nb">.</span>
   <span class="nt">--kid</span> value                 Key identifier from External CA. Used <span class="k">for </span>External Account Binding.
   <span class="nt">--hmac</span> value                MAC key from External CA. Should be <span class="k">in </span>Base64 URL Encoding without padding format. Used <span class="k">for </span>External Account Binding.
   <span class="nt">--key-type</span> value, <span class="nt">-k</span> value  Key <span class="nb">type </span>to use <span class="k">for </span>private keys. Supported: rsa2048, rsa4096, rsa8192, ec256, ec384 <span class="o">(</span>default: <span class="s2">"rsa2048"</span><span class="o">)</span>
   <span class="nt">--path</span> value                Directory to use <span class="k">for </span>storing the data <span class="o">(</span>default: <span class="s2">"./.lego"</span><span class="o">)</span>
   <span class="nt">--exclude</span> value, <span class="nt">-x</span> value   Explicitly disallow solvers by name from being used. Solvers: <span class="s2">"http-01"</span>, <span class="s2">"dns-01"</span>, <span class="s2">"tls-alpn-01"</span><span class="nb">.</span>
   <span class="nt">--webroot</span> value             Set the webroot folder to use <span class="k">for </span>HTTP based challenges to write directly <span class="k">in </span>a file <span class="k">in</span> .well-known/acme-challenge
   <span class="nt">--memcached-host</span> value      Set the memcached host<span class="o">(</span>s<span class="o">)</span> to use <span class="k">for </span>HTTP based challenges. Challenges will be written to all specified hosts.
   <span class="nt">--http</span> value                Set the port and interface to use <span class="k">for </span>HTTP based challenges to listen on. Supported: interface:port or :port
   <span class="nt">--tls</span> value                 Set the port and interface to use <span class="k">for </span>TLS based challenges to listen on. Supported: interface:port or :port
   <span class="nt">--dns</span> value                 Solve a DNS challenge using the specified provider. Disables all other challenges. Run <span class="s1">'lego dnshelp'</span> <span class="k">for </span><span class="nb">help </span>on usage.
   <span class="nt">--http-timeout</span> value        Set the HTTP <span class="nb">timeout </span>value to a specific value <span class="k">in </span>seconds. The default is 10 seconds. <span class="o">(</span>default: 0<span class="o">)</span>
   <span class="nt">--dns-timeout</span> value         Set the DNS <span class="nb">timeout </span>value to a specific value <span class="k">in </span>seconds. The default is 10 seconds. <span class="o">(</span>default: 0<span class="o">)</span>
   <span class="nt">--dns-resolvers</span> value       Set the resolvers to use <span class="k">for </span>performing recursive DNS queries. Supported: host:port. The default is to use the system resolvers, or Google<span class="s1">'s DNS resolvers if the system'</span>s cannot be determined.
   <span class="nt">--pem</span>                       Generate a .pem file by concatenating the .key and .crt files together.
   <span class="nt">--help</span>, <span class="nt">-h</span>                  show <span class="nb">help</span>
   <span class="nt">--version</span>, <span class="nt">-v</span>               print the version
</code></pre></div></div>

<h3 id="noti">noti</h3>

<p>贼好用的终端命令异步执行通知工具 👉 <a href="https://github.com/variadico/noti">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/m2r1e.jpg" alt="noti" /></p>

<h3 id="gosu">gosu</h3>

<p>临时切换到指定用户运行特定命令，方便测试权限问题 👉 <a href="https://github.com/tianon/gosu">Github</a></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>gosu
Usage: ./gosu user-spec <span class="nb">command</span> <span class="o">[</span>args]
   eg: ./gosu tianon bash
       ./gosu nobody:root bash <span class="nt">-c</span> <span class="s1">'whoami &amp;&amp; id'</span>
       ./gosu 1000:1 <span class="nb">id</span>
</code></pre></div></div>

<h3 id="sup">sup</h3>

<p>类似 Ansible 的一个批量执行工具，暂且称之为低配版 Ansible 👉 <a href="https://github.com/pressly/sup">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/x0eaz.gif" alt="sup" /></p>

<h3 id="aptly">aptly</h3>

<p>Debian 仓库管理工具 👉 <a href="https://github.com/aptly-dev/aptly">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/8e0ml.jpg" alt="aptly" /></p>

<h3 id="mmh">mmh</h3>

<p>支持无限跳板机登录的 ssh 小工具(自己写的) 👉 <a href="https://github.com/mritd/mmh">Github</a></p>

<p><img src="https://cdn.oss.link/markdown/37638.gif" alt="mmh" /></p>

<p>转载请注明出处，本文采用 <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">CC4.0</a> 协议授权</p>
:ET