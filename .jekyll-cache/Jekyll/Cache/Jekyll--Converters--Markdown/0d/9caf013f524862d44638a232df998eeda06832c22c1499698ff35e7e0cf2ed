I"e.<p><img src="https://cdn.oss.link/markdown/hexo_vim_logo.png" alt="vim_logo" /></p>

<h2 id="一vim-模式">一、Vim 模式</h2>

<ul>
  <li>编辑模式 : 键盘操作通常被解析为编辑命令</li>
  <li>输入模式 : 大部分键盘操作被存储到文档中</li>
  <li>末行模式 : 用于解释运行 Vim 内置命令</li>
</ul>

<h2 id="二模式切换">二、模式切换</h2>

<!--more-->

<h3 id="1-编辑模式--输入模式">1、 编辑模式 –&gt; 输入模式</h3>

<ul>
  <li><code class="highlighter-rouge">i</code> : 在当前光标所在处输入</li>
  <li><code class="highlighter-rouge">I</code> : 在当前光标所在行的行首输入</li>
  <li><code class="highlighter-rouge">a</code> : 在当前光标所在处后方输入</li>
  <li><code class="highlighter-rouge">A</code> : 在当前光标所在行行尾输入</li>
  <li><code class="highlighter-rouge">o</code> : 在光标所在行的下方新增空白行</li>
  <li><code class="highlighter-rouge">O</code> : 在当前所在行的上方新增空白行</li>
</ul>

<h3 id="2输入模式--编辑模式">2、输入模式 –&gt; 编辑模式</h3>

<ul>
  <li><code class="highlighter-rouge">ESC</code> : 从输入模式返回编辑模式</li>
</ul>

<h3 id="3编辑模式--末行模式">3、编辑模式 –&gt; 末行模式</h3>

<ul>
  <li><code class="highlighter-rouge">:</code> : 从编辑模式进入末行模式，两次 ESC 返回到编辑模式</li>
</ul>

<h2 id="三vim-常用命令">三、Vim 常用命令</h2>

<h3 id="1退出">1、退出</h3>

<ul>
  <li><code class="highlighter-rouge">:q!</code> : 不保存退出</li>
  <li><code class="highlighter-rouge">:wq</code> : 保存并退出</li>
  <li><code class="highlighter-rouge">:x</code> : 保存并退出</li>
  <li><code class="highlighter-rouge">ZZ</code> : 保存并退出(编辑模式)</li>
  <li><code class="highlighter-rouge">:wq!</code> : 强制保存并退出</li>
  <li><code class="highlighter-rouge">:qall</code> : 多文件打开时退出所有文件</li>
  <li><code class="highlighter-rouge">:wqall</code> : 保存并退出所有文件</li>
</ul>

<h3 id="2打开">2、打开</h3>

<ul>
  <li><code class="highlighter-rouge">vim FILE1 FILE2 ...</code> : 打开多个文件
    <ul>
      <li><code class="highlighter-rouge">:next</code> : 跳转到下一个文件</li>
      <li><code class="highlighter-rouge">:first</code> : 跳转到第一个文件</li>
      <li><code class="highlighter-rouge">:last</code> : 跳转到最后一个文件</li>
      <li><code class="highlighter-rouge">:prev</code> : 跳转到前一个文件</li>
    </ul>
  </li>
  <li><code class="highlighter-rouge">vim -o FILE1 FILE2 ...</code> : 以上下分屏模式打开所有文件</li>
  <li><code class="highlighter-rouge">vim -O FILE1 FILE2 ...</code> : 一左右分屏方式打开所有文件
    <ul>
      <li><code class="highlighter-rouge">Ctrl+W</code> 在按上下/左右箭头 切换编辑区</li>
    </ul>
  </li>
  <li><code class="highlighter-rouge">Ctrl+w,s</code> : 对当前文件进行上下分屏显示，类似 <code class="highlighter-rouge">-o</code></li>
  <li>
    <p><code class="highlighter-rouge">Ctrl+w,v</code> : 对当前文件进行左右分屏显示，类似 <code class="highlighter-rouge">-O</code></p>
  </li>
  <li><code class="highlighter-rouge">vim +# FILE</code> : 打开文件，并将光标定位到 # 行位置，不加数字则代表定位在文档末尾</li>
</ul>

<h3 id="3光标移动">3、光标移动</h3>

<p><strong>编辑模式下</strong></p>

<ul>
  <li><code class="highlighter-rouge">[#] h</code> : 向左移动[#]字符，不写默认1</li>
  <li><code class="highlighter-rouge">[#] l</code> : 向右移动[#]字符，不写默认1</li>
  <li><code class="highlighter-rouge">[#] j</code> : 向下移动[#]行，不写默认1</li>
  <li><code class="highlighter-rouge">[#] k</code> ; 向上移动[#]行，不写默认1</li>
  <li><code class="highlighter-rouge">w</code> : 跳至下一个单词的词首</li>
  <li><code class="highlighter-rouge">b</code> : 跳至当前/上一个单词词首</li>
  <li><code class="highlighter-rouge">e</code> : 跳至当前/下一个单词词尾</li>
  <li><code class="highlighter-rouge">^</code> : 跳转到当前行首</li>
  <li><code class="highlighter-rouge">$</code> : 跳转到当前行尾(包含空白行)</li>
  <li><code class="highlighter-rouge">0</code> : 跳转到当前行首(包含空白行)</li>
  <li><code class="highlighter-rouge">)</code> : 跳转到下一句行尾</li>
  <li><code class="highlighter-rouge">(</code> : 跳转到上一句行首</li>
  <li><code class="highlighter-rouge">}</code> : 跳转到下一段行尾</li>
  <li><code class="highlighter-rouge">{</code> : 跳转到上一段行首</li>
  <li><code class="highlighter-rouge">[#] G</code> : 跳转到指定行，不写则默认文档最后一行</li>
  <li><code class="highlighter-rouge">Ctrl+f</code> : 向下翻一屏</li>
  <li><code class="highlighter-rouge">Ctrl+b</code> : 向上翻一屏</li>
  <li><code class="highlighter-rouge">Ctrl+d</code> : 向下翻半屛</li>
  <li><code class="highlighter-rouge">Ctrl+u</code> : 向上翻半屛</li>
</ul>

<h3 id="4编辑">4、编辑</h3>

<ul>
  <li><code class="highlighter-rouge">[#] x</code> : 删除光标所在处其后的 # 个字符，不写删除当前字符</li>
  <li><code class="highlighter-rouge">r 字符</code> : 替换光标所在处为指定字符</li>
  <li><code class="highlighter-rouge">d [***]</code> : 删除命令，可配合光标跳转命令删除字符
    <ul>
      <li><code class="highlighter-rouge">d w</code> : 删除光标后一个单词</li>
      <li><code class="highlighter-rouge">d b</code> : 删除光标前一个单词</li>
      <li><code class="highlighter-rouge">d $</code> : 删除光标后到行尾所有内容</li>
      <li><code class="highlighter-rouge">d ^</code> : 删除光标到行首所有内容</li>
      <li><code class="highlighter-rouge">[#] d d</code> : 删除光标所在处后 # 行，不写删除当前行</li>
    </ul>
  </li>
</ul>

<p><strong>末行模式下</strong></p>

<ul>
  <li><code class="highlighter-rouge">START,END d</code> : 删除 START 到 END 行内容</li>
  <li><code class="highlighter-rouge">SATRT,+# d</code> : 删除 START 行开始向后的 # 行内容</li>
  <li><code class="highlighter-rouge">+#,END d</code> : 删除从 END 行开始向上的前 # 行内容</li>
  <li><code class="highlighter-rouge">$ d</code> : 删除当前行开始到文件末尾</li>
  <li><code class="highlighter-rouge">. d</code> : 删除当前行</li>
  <li><code class="highlighter-rouge">.,$-2</code> : <strong>支持组合删除，前面的代表删除当前行开始，到文件末尾-2 行的所有内容</strong></li>
  <li><code class="highlighter-rouge">% d</code> : 删除全文</li>
  <li>
    <p><code class="highlighter-rouge">/pat1/,/pat2/ d</code> : 从光标所在行开始，删除从第一次被 pat1 匹配到的行开始到第一次被 pat2 匹配带的行结束 中间的所有行</p>
  </li>
  <li><code class="highlighter-rouge">c [***]</code> : 改变命令，先删除内容再切换到输入模式，同 <code class="highlighter-rouge">d</code> 命令相同，可配合光标跳转命令改变字符
    <ul>
      <li><code class="highlighter-rouge">[#] c c</code> : 删除光标所在处 # 行并进入输入模式，不写默认删除当前行并进入输入模式</li>
    </ul>
  </li>
  <li><code class="highlighter-rouge">y [***]</code> : 复制命令，配合光标跳转命令使用，<code class="highlighter-rouge">[#] yy</code> 复制当前行开始的向下 # 行，不写默认复制当前行</li>
  <li><code class="highlighter-rouge">p</code> : 粘贴当前光标所在位置的后面(可能是行或者单词，取决于复制的内容)</li>
  <li><code class="highlighter-rouge">P</code> : 粘贴当前光标所在位置的前面(可能是行或者单词，取决于复制的内容)</li>
  <li><code class="highlighter-rouge">u</code> : 撤销修改</li>
  <li><code class="highlighter-rouge">Ctrl+r</code> : 撤销此前的撤销命令</li>
  <li><code class="highlighter-rouge">.</code> : 重复此前命令</li>
</ul>

<h3 id="5查找">5、查找</h3>

<ul>
  <li><code class="highlighter-rouge">/keyword</code> : 向下查找</li>
  <li><code class="highlighter-rouge">?keyword</code> : 向上查找</li>
  <li><code class="highlighter-rouge">n</code> : 向下循环查找</li>
  <li>
    <p><code class="highlighter-rouge">N</code> : 向上循环查找</p>
  </li>
  <li><code class="highlighter-rouge">set hlsearch</code> : 开启高亮查找</li>
  <li><code class="highlighter-rouge">set nohlsearch</code> : 关闭高亮查找</li>
</ul>

<h3 id="6可视化模式">6、可视化模式</h3>

<ul>
  <li><code class="highlighter-rouge">v</code> : 进入可视化，按照单词选择</li>
  <li><code class="highlighter-rouge">V</code> : 进入可视化，按照行选择</li>
</ul>

<h2 id="四窗口属性设置">四、窗口属性设置</h2>

<ul>
  <li><code class="highlighter-rouge">set nu</code> : 显示行号</li>
  <li><code class="highlighter-rouge">set nonu</code> : 取消显示行号</li>
  <li><code class="highlighter-rouge">set ai</code> : 自动缩进</li>
  <li><code class="highlighter-rouge">set noai</code> : 取消自动缩进</li>
  <li><code class="highlighter-rouge">set ic</code> : 搜索忽略大小写</li>
  <li><code class="highlighter-rouge">set noic</code> : 取消搜索忽略大小写</li>
  <li><code class="highlighter-rouge">set sm</code> : 显示与之匹配的括号</li>
  <li><code class="highlighter-rouge">set nosm</code> : 取消与之显示的括号</li>
  <li><code class="highlighter-rouge">syntax on</code> : 开启语法高亮</li>
  <li><code class="highlighter-rouge">syntax off</code> : 关闭语法高亮</li>
  <li><code class="highlighter-rouge">set hlsearch</code> : 开启搜索高亮</li>
  <li><code class="highlighter-rouge">set nohlsearch</code> : 关闭搜索高亮</li>
</ul>

<h2 id="五配置文件">五、配置文件</h2>

<ul>
  <li>全局配置文件存放于 <code class="highlighter-rouge">/etc/vimrc</code></li>
  <li>用户配置文件存放于 <code class="highlighter-rouge">~/.vimrc</code></li>
</ul>

<h2 id="六查找替换">六、查找替换</h2>

<p><strong>末行模式下</strong></p>

<ul>
  <li><code class="highlighter-rouge">命令格式</code> : <code class="highlighter-rouge">地址定界s/查找模式/替换内容/gi</code>
    <ul>
      <li><code class="highlighter-rouge">s</code> : 替换命令，可换成删除 <code class="highlighter-rouge">d</code> 等</li>
      <li><code class="highlighter-rouge">g</code> : global，全局操作，<strong>默认的 vim 搜索替换只匹配每行中的第一个被模式匹配的字符，如果有多个则忽略，g 代表全部替换</strong></li>
      <li><code class="highlighter-rouge">i</code> : 忽略大小写</li>
    </ul>
  </li>
  <li>
    <p><strong>对于分隔符 <code class="highlighter-rouge">/</code> 可以自定义，默认的 vim 认为紧跟在编辑命令 <code class="highlighter-rouge">s</code> 后的字符即为分隔符，所以为了避免路径替换时对 <code class="highlighter-rouge">/</code> 做转义可以使用自定义格式，如 <code class="highlighter-rouge">地址定界s@匹配模式@替换内容@gi</code></strong></p>
  </li>
  <li><code class="highlighter-rouge">&amp;</code> : 用于引用前面 <strong>查找模式</strong> 所匹配到的所有字符，<strong>通常用于插入式替换</strong>，如在非注释行前加入 <code class="highlighter-rouge">#</code> 注释符 : <code class="highlighter-rouge">1,$s/^[^#].*/#&amp;/gi</code>
转载请注明出处，本文采用 <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">CC4.0</a> 协议授权</li>
</ul>
:ET